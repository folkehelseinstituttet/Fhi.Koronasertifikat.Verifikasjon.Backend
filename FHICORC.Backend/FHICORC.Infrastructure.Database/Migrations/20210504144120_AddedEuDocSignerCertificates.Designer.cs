// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using FHICORC.Infrastructure.Database.Context;

namespace FHICORC.Infrastructure.Database.Migrations
{
    [DbContext(typeof(CoronapassContext))]
    [Migration("20210504144120_AddedEuDocSignerCertificates")]
    partial class AddedEuDocSignerCertificates
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("FHICORC.Domain.Models.ActiveJob", b =>
                {
                    b.Property<Guid>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<string>("DeviceToken")
                        .HasColumnType("text");

                    b.HasKey("JobId");

                    b.HasIndex("Created")
                        .HasMethod("btree");

                    b.ToTable("ActiveJobs");
                });

            modelBuilder.Entity("FHICORC.Domain.Models.CleanJobRepositoryResult", b =>
                {
                    b.Property<int>("ExpiredActiveJobsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ActiveJobsLeft")
                        .HasColumnType("integer");

                    b.Property<int>("CompletedJobsLeft")
                        .HasColumnType("integer");

                    b.Property<int>("ExpiredCompletedJobsDeleted")
                        .HasColumnType("integer");

                    b.Property<int>("JobsInBothTablesDeleted")
                        .HasColumnType("integer");

                    b.HasKey("ExpiredActiveJobsDeleted");

                    b.ToTable("CleanJobRepositoryResult");
                });

            modelBuilder.Entity("FHICORC.Domain.Models.CompletedJob", b =>
                {
                    b.Property<Guid>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.HasKey("JobId");

                    b.HasIndex("Created");

                    b.ToTable("CompletedJobs");
                });

            modelBuilder.Entity("FHICORC.Domain.Models.EuDocSignerCertificate", b =>
                {
                    b.Property<int>("EuDocSignerCertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Certificate")
                        .HasColumnType("text");

                    b.Property<string>("CertificateType")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now() at time zone 'utc'");

                    b.Property<string>("KeyIdentifier")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PublicKey")
                        .HasColumnType("text");

                    b.Property<string>("Signature")
                        .HasColumnType("text");

                    b.Property<string>("Thumbprint")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("EuDocSignerCertificateId");

                    b.ToTable("EuDocSignerCertificates");
                });

            modelBuilder.Entity("FHICORC.Domain.Models.InsertedJobs", b =>
                {
                    b.Property<int>("JobIdsInserted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("JobIdsInserted");

                    b.ToTable("InsertedJobs");
                });
#pragma warning restore 612, 618
        }
    }
}
